##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

##
#  Establish a google font proxy with caching of font files, etc
#
#  You are required to change the domain/server name in this config: fonts.doma.in
##

proxy_cache_path /var/cache/nginx/googlefonts levels=1:2 use_temp_path=off keys_zone=cdn_cache:1024m max_size=1G inactive=14d;

map $http_user_agent $ua_fonts {
    default 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36';
    ~(MSIE\ 8) 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0)';
    ~(MSIE|iPhone|Version) 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)';
}

server {
        listen 443 http2;
        #listen [::]:443 http2;
        listen 80 http2;
        #listen [::]:80 http2;

        server_name fonts.doma.in;

        #access_log /var/log/nginx/in.doma.fonts/access-ssl.log combined;
        #error_log /var/log/nginx/in.doma.fonts/error-ssl.log;

        #access_log syslog:server=unix:/dev/log,tag=nginx_access,nohostname logstash_json;
        #access_log off;
        #error_log syslog:server=unix:/dev/log,tag=nginx_error,nohostname;

    
        location /css {
                proxy_pass http://127.0.0.1:3000;
                proxy_http_version 1.1;
                proxy_set_header User-Agent $ua_fonts;
                proxy_redirect off;

                proxy_cache cdn_cache;
                proxy_cache_key "$request_uri$ua_fonts";
                proxy_cache_lock on;
                proxy_cache_lock_age 5s;
                proxy_cache_lock_timeout 5s;
                proxy_cache_methods GET;
                proxy_cache_valid 200 1d;
                proxy_cache_valid any 60s;
                proxy_hide_header 'access-control-allow-origin';

                add_header X-Cache-Status $upstream_cache_status;
                add_header Access-Control-Allow-Origin "$http_origin";

                expires 7d;
        }

        location /css2 {
                proxy_pass http://127.0.0.1:3000;
                proxy_http_version 1.1;
                proxy_set_header User-Agent $ua_fonts;
                proxy_redirect off;

                proxy_cache cdn_cache;
                proxy_cache_key "$request_uri$ua_fonts";
                proxy_cache_lock on;
                proxy_cache_lock_age 5s;
                proxy_cache_lock_timeout 5s;
                proxy_cache_methods GET;
                proxy_cache_valid 200 1d;
                proxy_cache_valid any 60s;
                proxy_hide_header 'access-control-allow-origin';

                add_header X-Cache-Status $upstream_cache_status;
                add_header Access-Control-Allow-Origin "$http_origin";

                expires 7d;
        }

        location / {
                proxy_pass https://fonts.gstatic.com/;
                proxy_http_version 1.1;
                proxy_set_header User-Agent $http_user_agent;
                proxy_set_header Host fonts.gstatic.com;
                proxy_redirect off;

                proxy_cache cdn_cache;
                proxy_cache_key "$request_uri";
                proxy_cache_lock on;
                proxy_cache_lock_age 5s;
                proxy_cache_lock_timeout 5s;
                proxy_cache_methods GET;
                proxy_cache_valid 200 7d;
                proxy_cache_valid any 60s;
                proxy_hide_header 'access-control-allow-origin';

                add_header X-Cache-Status $upstream_cache_status;
                add_header Access-Control-Allow-Origin "$http_origin";

                expires 7d;
        }

        #error_page 403 /e403.php;
        #error_page 404 /e404.php;

        #
        # Strict Transport Security (STS) response header (HSTS)
        #

        #
        # HSTS with preload (Preferred, but be careful, read!)
        #
        # This is the full-in option and a one-way ticket, as Google will add a domain,
        # that sets the preload option, to an index that will be included into modern browsers.
        # All domains on the list will than only be accessed via HTTPS by the browser, also if
        # protocoll is set to HTTP
        #
        #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        #
        # HSTS
        #
        #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
        # to disable content-type sniffing on some browsers.
        # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
        # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
        # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
        # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
        add_header X-Content-Type-Options nosniff;
        
        #
        # Don't send the nginx version number in error pages and server header
        #
        server_tokens off;
        
        #
        # turning off the X-Powered-By header
        #
        proxy_hide_header X-Powered-By;
}